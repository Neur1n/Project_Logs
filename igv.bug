PROJECT: Intelligent Ground Vehicle                                            
GitHub https://github.com/Neur1n/IGV

******************************************************************************* 
*******************************************************************************
date    07/15/2016
library DPRALTE060B080.cpp
*******************************************************************************
BUG Odometry cannot be read correctly if

        //codebegin
            void getReadAccess_Left();
            void getReadAcess_Right();
        //codeend

    are used, since the length of response of this serial command is different
    from the other commands of this library.

SOL Getting read access is not necessary for this servo drive, since the
    access is gotten by default.

TODO For now each serial command, of type <uint8_t>, is stored into a <static>
    array since without <static> the commands vanished for unknown reason 
    when they were sent to the servo drive from Windows OS. 

    However this makes the lengths of TX buffer and RX buffer fixed and a lot 
    of <static uint8_t> arrays need to be declared as a workaround, which makes
    me struggling with the naming.

    So I'm gonna try again in Linux.

SOL On 07/24/2016, The names of TX and RX buffers are unified to "TxBuffer" and
    "RxBuffer" and it worked.

******************************************************************************* 
*******************************************************************************
date    07/15/2016
library DPRALTE060B080.cpp
*******************************************************************************
BUG The velocity was 437.10rpm when the desired is 10rpm, since

        //codebegin
            void getVelocityArray();
        //codeend
    
    was called twice, which the 2nd time is in
    
        //codebegin
            void setVelocity_Left(int);
            void setVelocity_Right(int);
        //codeend

    The 1st call is always in

        //codebegin
            void getCRCArray();
        //codeend

SOL Remove the 2nd call.

******************************************************************************* 
******************************************************************************* 
date    07/15/2016
library OS5000.cpp
******************************************************************************* 
BUG The serial signal read from the OS5000-S compass is in the format of

        $C248.9P0.0R6.9T25.5*2F 
        
    of data type <std::string>.
    However the string is not always read completely when using

        //codebegin
            size_t serial::Serial::read(std::string &buffer, size_t size);
        //codeend

SOL Use

        //codebegin
            std::string serial::Serial::readline(size_t size, std::string eol);
        //codeend

    instead, since OS5000-S is publishing line by line then I assume "eol" of
    each line is "\n". It works much better then.

TODO For now the baudrate is set to 9600 and OS5000-S is publishing at 2Hz.
    This baudrate makes it uncapable of publishing, or the code cannot read, a
    complete signal if the orientation is changed rapidly. But it seems this 
    does not matter since the IGV will not turning in such a high speed.

    To make it publish at a higher frequency, higher baudrate is needed. But 
    such configuration seems unnecessary.

******************************************************************************* 
******************************************************************************* 
date    07/15/2016
library DPRALTE060B080.cpp & OS5000.cpp
******************************************************************************* 
BUG The data is not updating when using <std::stringstream> for data type 
    conversion.

SOL <std::stringstream> needs to be cleared each time before streaming the new
    data, i.e.

        //codebegin
            std::stringstream ss;
            ss.str(std::string());
            ss.clear();
        //codeend

******************************************************************************* 
******************************************************************************* 
date     07/15/2016
software DriveWare 7.3.2
******************************************************************************* 
BUG A negative target velocity has to be set to make left motor spins forward.

SOL In "condiguration 0", set "Rotation: to "Inverted".

******************************************************************************* 
******************************************************************************* 
date     07/22/2016
hardware DPRALTE-060B080 Servo Drive
******************************************************************************* 
BUG Cannot change serial communication address of the servo drive.

SOL Pull the SELECT pin to SIGANL GROUND, that is put a jumper between pin 1 
    and pin 5. Otherwise the servo drive is always operates with address 63 and
    baudrate 115200 (default configuration).

******************************************************************************* 
******************************************************************************* 
date    09/20/2016
library sicktoolbox_wrapper
******************************************************************************* 
BUG According to the tutorial of the "sicktoolbox_wrapper" package
    (http://wiki.ros.org/sicktoolbox_wrapper/Tutorials/UsingTheSicklms), the
    "Fixed Frame" in "Global Options" is set to "/base_laser", and "Topic" of
    "Floor Scan" is "/scan".
    
    In the current version of RViz (came with ROS Indigo), I think the "Floor 
    Scan" has been repalced with "LaserScan".

    However this was not working.

SOL Set the "Fixed Frame" in "Global Options" to be "/laser", and the topic of 
    "LaserScan" to be "/scan".
